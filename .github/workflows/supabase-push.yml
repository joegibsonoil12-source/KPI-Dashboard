name: Deploy Supabase (db push)

on:
  workflow_dispatch:
  push:
    paths:
      - "supabase/**"
      - ".supabase/**"
      - "db/migrations/**"
      - "sql/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Verify Supabase CLI via npx
        run: npx --yes supabase@latest --version

      - name: Debug show config/state
        run: |
          set -euo pipefail
          echo "PWD: $(pwd)"
          echo
          echo "supabase/ listing:"; ls -la supabase || true
          echo
          echo "Show supabase/config.toml:"; cat supabase/config.toml || true
          echo
          echo "Show supabase/.supabase/project:"; cat supabase/.supabase/project || true

      - name: Authenticate and optionally link
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          set -euo pipefail
          if [ -z "${SUPABASE_ACCESS_TOKEN:-}" ]; then
            echo "SUPABASE_ACCESS_TOKEN not set; skipping Supabase db push"
            exit 0
          fi

          mkdir -p supabase
          npx --yes supabase@latest login --token "$SUPABASE_ACCESS_TOKEN"

          if [ -f "supabase/.supabase/project" ]; then
            echo "Project already linked in supabase/.supabase/project"
            echo "Contents of supabase/.supabase/project:"
            cat supabase/.supabase/project || true
          elif [ -n "${SUPABASE_PROJECT_REF:-}" ]; then
            echo "SUPABASE_PROJECT_REF is set (value not printed for security)"

            # Strip leading/trailing quotes and whitespace from the secret
            CLEANED_REF=$(echo "$SUPABASE_PROJECT_REF" | \
              sed -e 's/^[[:space:]]*"//' -e 's/"[[:space:]]*$//' | \
              sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

            # Validate format: must be 20 lowercase alphanumeric characters
            if ! echo "$CLEANED_REF" | grep -qE '^[a-z0-9]{20}$'; then
              echo "ERROR: SUPABASE_PROJECT_REF has invalid format."
              echo "Expected: 20 lowercase alphanumeric characters"
              echo "Example: 'abcdefghijklmnopqrst'"
              echo "Please check the repository secret configuration."
              exit 1
            fi

            echo "SUPABASE_PROJECT_REF format validated successfully"
            echo "Linking to Supabase project..."
            (cd supabase && \
             npx --yes supabase@latest link \
             --project-ref "$CLEANED_REF" --debug)

            if [ -f "supabase/.supabase/project" ]; then
              echo "Link successful. Contents of supabase/.supabase/project:"
              cat supabase/.supabase/project || true
            fi
          else
            echo "No SUPABASE_PROJECT_REF and no existing link."
            echo "Database push will be skipped in the next step."
          fi

      - name: Push CLI-managed migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        working-directory: supabase
        run: |
          set -euo pipefail
          if [ -z "${SUPABASE_ACCESS_TOKEN:-}" ]; then
            echo "SUPABASE_ACCESS_TOKEN not set; skipping"
            exit 0
          fi
          if [ ! -f ".supabase/project" ]; then
            echo "Not linked (supabase/.supabase/project missing); skipping db push"
            exit 0
          fi

          npx --yes supabase@latest db push --debug
